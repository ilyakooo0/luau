if _port then
return 
end
print("\116\101\115\116\105\110\103\32\115\116\97\110\100\45\97\108\111\110\101\32\105\110\116\101\114\112\114\101\116\101\114")
assert(os.execute())
local arg = arg or ARG
local prog = os.tmpname()
local otherprog = os.tmpname()
local out = os.tmpname()
local progname
do
local i = 0
while arg[i] do
i=i - 1
end
progname=arg[i + 1]
end
print("\112\114\111\103\110\97\109\101\58\32" .. progname)
local prepfile = function (s,mod,p)
mod=mod and "\119\98" or "\119"
p=p or prog
local f = io.open(p,mod)
f:write(s)
assert(f:close())
end
local function getoutput
()
local f = io.open(out)
local t = f:read("\97")
f:close()
assert(os.remove(out))
return t
end
local function checkprogout
(s)
assert(string.sub(s,- 1) == "\10")
local t = getoutput()
for line in string.gmatch(s,"\46\45\10")
do
assert(string.find(t,line,1,true))
end
end
local function checkout
(s)
local t = getoutput()
if s ~= t then
print(string.format("\39\37\115\39\32\45\32\39\37\115\39\10",s,t))
end
assert(s == t)
return t
end
local function RUN
(p, ...)
p=string.gsub(p,"\108\117\97","\34" .. progname .. "\34",1)
local s = string.format(p,...)
assert(os.execute(s))
end
local function NoRun
(msg,p, ...)
p=string.gsub(p,"\108\117\97","\34" .. progname .. "\34",1)
local s = string.format(p,...)
s=string.format("\37\115\32\62\37\115\32\50\62\38\49",s,out)
assert(not os.execute(s))
assert(string.find(getoutput(),msg,1,true))
end
RUN("\108\117\97\32\45\118")
print(string.format("\40\116\101\109\112\111\114\97\114\121\32\112\114\111\103\114\97\109\32\102\105\108\101\32\117\115\101\100\32\105\110\32\116\104\101\115\101\32\116\101\115\116\115\58\32\37\115\41",prog))
prepfile("")
RUN("\108\117\97\32\45\32\60\32\37\115\32\62\32\37\115",prog,out)
checkout("")
prepfile("\32\32\112\114\105\110\116\40\10\49\44\32\97\10\41\10")
RUN("\108\117\97\32\45\32\60\32\37\115\32\62\32\37\115",prog,out)
checkout("\49\9\110\105\108\10")
RUN("\101\99\104\111\32\34\112\114\105\110\116\40\49\48\41\10\112\114\105\110\116\40\50\41\10\34\32\124\32\108\117\97\32\62\32\37\115",out)
checkout("\49\48\10\50\10")
prepfile("\239\187\191")
RUN("\108\117\97\32\37\115\32\62\32\37\115",prog,out)
checkout("")
prepfile("\239\187\191\112\114\105\110\116\40\51\41")
RUN("\108\117\97\32\37\115\32\62\32\37\115",prog,out)
checkout("\51\10")
prepfile("\239\187\191\35\32\99\111\109\109\101\110\116\33\33\10\112\114\105\110\116\40\51\41")
RUN("\108\117\97\32\37\115\32\62\32\37\115",prog,out)
checkout("\51\10")
prepfile("\239",true)
NoRun("\117\110\101\120\112\101\99\116\101\100\32\115\121\109\98\111\108","\108\117\97\32\37\115",prog)
prepfile("\239\187",true)
NoRun("\117\110\101\120\112\101\99\116\101\100\32\115\121\109\98\111\108","\108\117\97\32\37\115",prog)
prepfile("\239\112\114\105\110\116\40\51\41",true)
NoRun("\117\110\101\120\112\101\99\116\101\100\32\115\121\109\98\111\108","\108\117\97\32\37\115",prog)
prepfile("\239\187\112\114\105\110\116\40\51\41",true)
NoRun("\117\110\101\120\112\101\99\116\101\100\32\115\121\109\98\111\108","\108\117\97\32\37\115",prog)
RUN("\101\99\104\111\32\34\112\114\105\110\116\40\97\114\103\91\49\93\41\34\32\124\32\108\117\97\32\45\32\45\104\32\62\32\37\115",out)
checkout("\45\104\10")
prepfile("\112\114\105\110\116\40\112\97\99\107\97\103\101\46\112\97\116\104\41")
RUN("\101\110\118\32\76\85\65\95\73\78\73\84\61\32\76\85\65\95\80\65\84\72\61\120\32\108\117\97\32\37\115\32\62\32\37\115",prog,out)
checkout("\120\10")
RUN("\101\110\118\32\76\85\65\95\73\78\73\84\61\32\76\85\65\95\80\65\84\72\95\53\95\52\61\121\32\76\85\65\95\80\65\84\72\61\120\32\108\117\97\32\37\115\32\62\32\37\115",prog,out)
checkout("\121\10")
prepfile("\112\114\105\110\116\40\112\97\99\107\97\103\101\46\99\112\97\116\104\41")
RUN("\101\110\118\32\76\85\65\95\73\78\73\84\61\32\76\85\65\95\67\80\65\84\72\61\120\117\120\117\32\108\117\97\32\37\115\32\62\32\37\115",prog,out)
checkout("\120\117\120\117\10")
RUN("\101\110\118\32\76\85\65\95\73\78\73\84\61\32\76\85\65\95\67\80\65\84\72\95\53\95\52\61\121\97\99\99\32\76\85\65\95\67\80\65\84\72\61\120\32\108\117\97\32\37\115\32\62\32\37\115",prog,out)
checkout("\121\97\99\99\10")
prepfile("\112\114\105\110\116\40\88\41")
RUN("\101\110\118\32\76\85\65\95\73\78\73\84\61\34\88\61\116\111\110\117\109\98\101\114\40\97\114\103\91\49\93\41\34\32\108\117\97\32\37\115\32\51\46\50\32\62\32\37\115",prog,out)
checkout("\51\46\50\10")
prepfile("\112\114\105\110\116\40\88\41")
RUN("\101\110\118\32\76\85\65\95\73\78\73\84\95\53\95\52\61\34\88\61\49\48\34\32\76\85\65\95\73\78\73\84\61\34\88\61\51\34\32\108\117\97\32\37\115\32\62\32\37\115",prog,out)
checkout("\49\48\10")
prepfile("\120\32\61\32\120\32\111\114\32\49\48\59\32\112\114\105\110\116\40\120\41\59\32\120\32\61\32\120\32\43\32\49")
RUN("\101\110\118\32\76\85\65\95\73\78\73\84\61\34\64\37\115\34\32\108\117\97\32\37\115\32\62\32\37\115",prog,prog,out)
checkout("\49\48\10\49\49\10")
NoRun("\76\85\65\95\73\78\73\84\58\49\58\32\109\115\103","\101\110\118\32\76\85\65\95\73\78\73\84\61\34\101\114\114\111\114\40\39\109\115\103\39\41\34\32\108\117\97")
local defaultpath,defaultCpath
do
prepfile("\112\114\105\110\116\40\112\97\99\107\97\103\101\46\112\97\116\104\44\32\112\97\99\107\97\103\101\46\99\112\97\116\104\41")
RUN("\101\110\118\32\76\85\65\95\73\78\73\84\61\34\101\114\114\111\114\40\49\48\41\34\32\76\85\65\95\80\65\84\72\61\120\120\120\32\76\85\65\95\67\80\65\84\72\61\120\120\120\32\108\117\97\32\45\69\32\37\115\32\62\32\37\115",prog,out)
local output = getoutput()
defaultpath=string.match(output,"\94\40\46\45\41\9")
defaultCpath=string.match(output,"\9\40\46\45\41\36")
RUN("\101\110\118\32\45\105\32\108\117\97\32\37\115\32\62\32\37\115",prog,out)
local out = getoutput()
assert(defaultpath == string.match(output,"\94\40\46\45\41\9"))
assert(defaultCpath == string.match(output,"\9\40\46\45\41\36"))
end
assert(not string.find(defaultpath,"\120\120\120") and string.find(defaultpath,"\108\117\97") and not string.find(defaultCpath,"\120\120\120") and string.find(defaultCpath,"\108\117\97"))
local function convert
(p)
prepfile("\112\114\105\110\116\40\112\97\99\107\97\103\101\46\112\97\116\104\41")
RUN("\101\110\118\32\76\85\65\95\80\65\84\72\61\34\37\115\34\32\108\117\97\32\37\115\32\62\32\37\115",p,prog,out)
local expected = getoutput()
expected=string.sub(expected,1,- 2)
if string.find(p,"\59\59") then
p=string.gsub(p,"\59\59","\59" .. defaultpath .. "\59")
p=string.gsub(p,"\94\59","")
p=string.gsub(p,"\59\36","")
end
assert(p == expected)
end
convert("\59")
convert("\59\59")
convert("\97\59\59\98")
convert("\59\59\98")
convert("\97\59\59")
convert("\97\59\98\59\59\99")
prepfile("\112\114\105\110\116\40\49\41\59\32\97\61\50\59\32\114\101\116\117\114\110\32\123\120\61\49\53\125")
prepfile(("\112\114\105\110\116\40\97\41\59\32\112\114\105\110\116\40\95\71\91\39\37\115\39\93\46\120\41"):format(prog),false,otherprog)
RUN("\101\110\118\32\76\85\65\95\80\65\84\72\61\34\63\59\59\34\32\108\117\97\32\45\108\32\37\115\32\45\108\37\115\32\45\108\115\116\114\105\110\103\32\45\108\32\105\111\32\37\115\32\62\32\37\115",prog,otherprog,otherprog,out)
checkout("\49\10\50\10\49\53\10\50\10\49\53\10")
prepfile("\112\114\105\110\116\40\115\116\114\46\117\112\112\101\114\39\97\108\111\32\97\108\111\39\44\32\109\46\109\97\120\40\49\48\44\32\50\48\41\41")
RUN("\108\117\97\32\45\108\32\39\115\116\114\61\115\116\114\105\110\103\39\32\39\45\108\109\61\109\97\116\104\39\32\45\101\32\39\112\114\105\110\116\40\109\46\115\105\110\40\48\41\41\39\32\37\115\32\62\32\37\115",prog,out)
checkout("\48\46\48\10\65\76\79\32\65\76\79\9\50\48\10")
RUN("\101\110\118\32\76\85\65\95\67\80\65\84\72\61\39\46\47\108\105\98\115\47\63\46\115\111\39\32\108\117\97\32\45\108\32\108\105\98\50\45\118\50\32\45\101\32\39\112\114\105\110\116\40\108\105\98\50\46\105\100\40\41\41\39\32\62\32\37\115",out)
checkout("\116\114\117\101\10")
local a = "\32\32\97\115\115\101\114\116\40\35\97\114\103\32\61\61\32\51\32\97\110\100\32\97\114\103\91\49\93\32\61\61\32\39\97\39\32\97\110\100\10\32\32\32\32\32\32\32\32\32\97\114\103\91\50\93\32\61\61\32\39\98\39\32\97\110\100\32\97\114\103\91\51\93\32\61\61\32\39\99\39\41\10\32\32\97\115\115\101\114\116\40\97\114\103\91\45\49\93\32\61\61\32\39\45\45\39\32\97\110\100\32\97\114\103\91\45\50\93\32\61\61\32\34\45\101\32\34\32\97\110\100\32\97\114\103\91\45\51\93\32\61\61\32\39\37\115\39\41\10\32\32\97\115\115\101\114\116\40\97\114\103\91\52\93\32\61\61\32\117\110\100\101\102\32\97\110\100\32\97\114\103\91\45\52\93\32\61\61\32\117\110\100\101\102\41\10\32\32\108\111\99\97\108\32\97\44\32\98\44\32\99\32\61\32\46\46\46\10\32\32\97\115\115\101\114\116\40\46\46\46\32\61\61\32\39\97\39\32\97\110\100\32\97\32\61\61\32\39\97\39\32\97\110\100\32\98\32\61\61\32\39\98\39\32\97\110\100\32\99\32\61\61\32\39\99\39\41\10"
a=string.format(a,progname)
prepfile(a)
RUN("\108\117\97\32\34\45\101\32\34\32\45\45\32\37\115\32\97\32\98\32\99",prog)
prepfile("\97\115\115\101\114\116\40\97\114\103\41")
prepfile("\97\115\115\101\114\116\40\97\114\103\41",false,otherprog)
RUN("\101\110\118\32\76\85\65\95\80\65\84\72\61\34\63\59\59\34\32\108\117\97\32\45\108\37\115\32\45\32\60\32\37\115",prog,otherprog)
RUN("\101\99\104\111\32\34\112\114\105\110\116\40\46\46\46\41\34\32\124\32\108\117\97\32\45\101\32\34\97\114\103\91\49\93\32\61\32\49\48\48\34\32\45\32\62\32\37\115",out)
checkout("\49\48\48\10")
NoRun("\39\97\114\103\39\32\105\115\32\110\111\116\32\97\32\116\97\98\108\101","\101\99\104\111\32\34\34\32\124\32\108\117\97\32\45\101\32\34\97\114\103\32\61\32\49\34\32\45")
RUN("\101\99\104\111\32\49\48\32\124\32\108\117\97\32\45\101\32\34\112\114\105\110\116\61\110\105\108\34\32\45\105\32\62\32\47\100\101\118\47\110\117\108\108\32\50\62\32\37\115",out)
assert(string.find(getoutput(),"\101\114\114\111\114\32\99\97\108\108\105\110\103\32\39\112\114\105\110\116\39"))
RUN("\101\99\104\111\32\34\105\111\46\115\116\100\101\114\114\58\119\114\105\116\101\40\49\48\48\48\41\10\99\111\110\116\34\32\124\32\108\117\97\32\45\101\32\34\114\101\113\117\105\114\101\39\100\101\98\117\103\39\46\100\101\98\117\103\40\41\34\32\50\62\32\37\115",out)
checkout("\108\117\97\95\100\101\98\117\103\62\32\49\48\48\48\108\117\97\95\100\101\98\117\103\62\32")
print("\116\101\115\116\105\110\103\32\119\97\114\110\105\110\103\115")
RUN("\101\99\104\111\32\34\105\111\46\115\116\100\101\114\114\58\119\114\105\116\101\40\49\41\59\32\119\97\114\110\91\91\88\88\88\93\93\34\32\124\32\108\117\97\32\50\62\32\37\115",out)
checkout("\49")
prepfile
RUN("\108\117\97\32\45\87\32\37\115\32\50\62\32\37\115",prog,out)
checkout("\76\117\97\32\119\97\114\110\105\110\103\58\32\64\111\102\102\88\88\88\64\111\102\102\10\76\117\97\32\119\97\114\110\105\110\103\58\32\64\111\110\10\76\117\97\32\119\97\114\110\105\110\103\58\32\90\90\90\10")
prepfile("\119\97\114\110\40\34\64\97\108\108\111\119\34\41\10\45\45\32\99\114\101\97\116\101\32\116\119\111\32\111\98\106\101\99\116\115\32\116\111\32\98\101\32\102\105\110\97\108\105\122\101\100\32\119\104\101\110\32\99\108\111\115\105\110\103\32\115\116\97\116\101\10\45\45\32\116\104\101\32\101\114\114\111\114\115\32\105\110\32\116\104\101\32\102\105\110\97\108\105\122\101\114\115\32\109\117\115\116\32\103\101\110\101\114\97\116\101\32\119\97\114\110\105\110\103\115\10\117\49\32\61\32\115\101\116\109\101\116\97\116\97\98\108\101\40\123\125\44\32\123\95\95\103\99\32\61\32\102\117\110\99\116\105\111\110\32\40\41\32\101\114\114\111\114\40\34\88\89\90\34\41\32\101\110\100\125\41\10\117\50\32\61\32\115\101\116\109\101\116\97\116\97\98\108\101\40\123\125\44\32\123\95\95\103\99\32\61\32\102\117\110\99\116\105\111\110\32\40\41\32\101\114\114\111\114\40\34\90\89\88\34\41\32\101\110\100\125\41\10")
RUN("\108\117\97\32\45\87\32\37\115\32\50\62\32\37\115",prog,out)
checkprogout("\90\89\88\41\10\88\89\90\41\10")
prepfile
RUN("\108\117\97\32\45\87\32\37\115\32\62\32\37\115",prog,out)
checkout("\99\114\101\97\116\105\110\103\32\49\10\99\114\101\97\116\105\110\103\32\50\10\50\10\99\114\101\97\116\105\110\103\32\51\10\110\105\108\10\49\10")
prepfile("\112\114\105\110\116\40\40\123\46\46\46\125\41\91\51\48\93\41")
RUN("\108\117\97\32\37\115\32\37\115\32\62\32\37\115",prog,string.rep("\32\97",30),out)
checkout("\97\10")
RUN("\108\117\97\32\34\45\101\112\114\105\110\116\40\49\41\34\32\45\101\97\61\51\32\45\101\32\34\112\114\105\110\116\40\97\41\34\32\62\32\37\115",out)
checkout("\49\10\51\10")
prepfile("\40\54\42\50\45\54\41\32\45\45\32\61\61\61\10\97\32\61\10\49\48\10\112\114\105\110\116\40\97\41\10\97")
RUN("\108\117\97\32\45\101\34\95\80\82\79\77\80\84\61\39\39\32\95\80\82\79\77\80\84\50\61\39\39\34\32\45\105\32\60\32\37\115\32\62\32\37\115",prog,out)
checkprogout("\54\10\49\48\10\49\48\10\10")
prepfile("\97\32\61\32\91\91\98\10\99\10\100\10\101\93\93\10\61\97")
RUN("\108\117\97\32\45\101\34\95\80\82\79\77\80\84\61\39\39\32\95\80\82\79\77\80\84\50\61\39\39\34\32\45\105\32\60\32\37\115\32\62\32\37\115",prog,out)
checkprogout("\98\10\99\10\100\10\101\10\10")
local prompt = "\97\108\111"
prepfile("\32\45\45\10\97\32\61\32\50\10")
RUN("\108\117\97\32\34\45\101\95\80\82\79\77\80\84\61\39\37\115\39\34\32\45\105\32\60\32\37\115\32\62\32\37\115",prompt,prog,out)
local t = getoutput()
assert(string.find(t,prompt .. "\46\42" .. prompt .. "\46\42" .. prompt))
prepfile("\32\45\45\10\97\32\61\32\50\10")
RUN("\108\117\97\32\45\105\32\60\32\37\115\32\62\32\37\115",prog,out)
local t = getoutput()
prompt="\62\32"
assert(string.find(t,prompt .. "\46\42" .. prompt .. "\46\42" .. prompt))
prompt="\108\111\99\97\108\32\67\32\61\32\48\59\95\80\82\79\77\80\84\61\115\101\116\109\101\116\97\116\97\98\108\101\40\123\125\44\123\95\95\116\111\115\116\114\105\110\103\32\61\32\102\117\110\99\116\105\111\110\32\40\41\32\67\32\61\32\67\32\43\32\49\59\32\114\101\116\117\114\110\32\67\32\101\110\100\125\41"
prepfile("\32\45\45\10\97\32\61\32\50\10")
RUN("\108\117\97\32\45\101\32\34\37\115\34\32\45\105\32\60\32\37\115\32\62\32\37\115",prompt,prog,out)
local t = getoutput()
assert(string.find(t,"\49\32\45\45\10\50\97\32\61\32\50\10\51\10",1,true))
prepfile("\100\101\98\117\103\32\61\32\114\101\113\117\105\114\101\32\34\100\101\98\117\103\34\10\109\32\61\32\123\120\61\48\125\10\115\101\116\109\101\116\97\116\97\98\108\101\40\109\44\32\123\95\95\116\111\115\116\114\105\110\103\32\61\32\102\117\110\99\116\105\111\110\40\120\41\10\32\32\114\101\116\117\114\110\32\116\111\115\116\114\105\110\103\40\100\101\98\117\103\46\103\101\116\105\110\102\111\40\52\41\46\99\117\114\114\101\110\116\108\105\110\101\32\43\32\120\46\120\41\10\101\110\100\125\41\10\101\114\114\111\114\40\109\41\10")
NoRun(progname .. "\58\32\54\10","\108\117\97\32\37\115",prog)
prepfile("\101\114\114\111\114\123\125")
NoRun("\101\114\114\111\114\32\111\98\106\101\99\116\32\105\115\32\97\32\116\97\98\108\101\32\118\97\108\117\101","\108\117\97\32\37\115",prog)
local s = "\32\45\45\10\102\117\110\99\116\105\111\110\32\102\32\40\32\120\32\41\10\32\32\108\111\99\97\108\32\97\32\61\32\91\91\10\120\117\120\117\10\93\93\10\32\32\108\111\99\97\108\32\98\32\61\32\34\92\10\120\117\120\117\92\110\34\10\32\32\105\102\32\120\32\61\61\32\49\49\32\116\104\101\110\32\114\101\116\117\114\110\32\49\32\43\32\49\50\32\44\32\50\32\43\32\50\48\32\101\110\100\32\32\45\45\91\91\32\116\101\115\116\32\109\117\108\116\105\112\108\101\32\114\101\116\117\114\110\115\32\93\93\10\32\32\114\101\116\117\114\110\32\120\32\43\32\49\10\32\32\45\45\92\92\10\101\110\100\10\114\101\116\117\114\110\40\32\102\40\32\49\48\48\32\41\32\41\10\97\115\115\101\114\116\40\32\97\32\61\61\32\98\32\41\10\100\111\32\114\101\116\117\114\110\32\102\40\32\49\49\32\41\32\101\110\100\32\32"
s=string.gsub(s,"\32","\10\10")
prepfile(s)
RUN("\108\117\97\32\45\101\34\95\80\82\79\77\80\84\61\39\39\32\95\80\82\79\77\80\84\50\61\39\39\34\32\45\105\32\60\32\37\115\32\62\32\37\115",prog,out)
checkprogout("\49\48\49\10\49\51\9\50\50\10\10")
prepfile("\35\99\111\109\109\101\110\116\32\105\110\32\49\115\116\32\108\105\110\101\32\119\105\116\104\111\117\116\32\92\110\32\97\116\32\116\104\101\32\101\110\100")
RUN("\108\117\97\32\37\115",prog)
prepfile("\35\99\111\109\109\101\110\116\10" .. string.dump(load("\112\114\105\110\116\40\51\41")),true)
RUN("\108\117\97\32\37\115\32\62\32\37\115",prog,out)
checkout("\51\10")
prepfile(string.format("\105\111\46\111\117\116\112\117\116\40\37\113\41\59\32\105\111\46\119\114\105\116\101\40\39\97\108\111\39\41",out))
RUN("\108\117\97\32\37\115",prog)
checkout("\97\108\111")
RUN("\108\117\97\32\45\118\32\32\45\101\34\112\114\105\110\116\39\104\101\108\108\111\39\34\32\62\32\37\115",out)
t=getoutput()
assert(string.find(t,"\80\85\67\37\45\82\105\111\10\104\101\108\108\111"))
prepfile("\111\115\46\101\120\105\116\40\110\105\108\44\32\116\114\117\101\41")
RUN("\108\117\97\32\37\115",prog)
prepfile("\111\115\46\101\120\105\116\40\48\44\32\116\114\117\101\41")
RUN("\108\117\97\32\37\115",prog)
prepfile("\111\115\46\101\120\105\116\40\116\114\117\101\44\32\116\114\117\101\41")
RUN("\108\117\97\32\37\115",prog)
prepfile("\111\115\46\101\120\105\116\40\49\44\32\116\114\117\101\41")
NoRun("","\108\117\97\32\37\115",prog)
prepfile("\111\115\46\101\120\105\116\40\102\97\108\115\101\44\32\116\114\117\101\41")
NoRun("","\108\117\97\32\37\115",prog)
prepfile
RUN("\108\117\97\32\37\115\32\62\32\37\115",prog,out)
checkprogout("\49\50\48\10\79\107\10")
assert(os.remove(prog))
assert(os.remove(otherprog))
assert(not os.remove(out))
NoRun("\117\110\114\101\99\111\103\110\105\122\101\100\32\111\112\116\105\111\110\32\39\45\104\39","\108\117\97\32\45\104")
NoRun("\117\110\114\101\99\111\103\110\105\122\101\100\32\111\112\116\105\111\110\32\39\45\45\45\39","\108\117\97\32\45\45\45")
NoRun("\117\110\114\101\99\111\103\110\105\122\101\100\32\111\112\116\105\111\110\32\39\45\69\120\39","\108\117\97\32\45\69\120")
NoRun("\117\110\114\101\99\111\103\110\105\122\101\100\32\111\112\116\105\111\110\32\39\45\118\118\39","\108\117\97\32\45\118\118")
NoRun("\117\110\114\101\99\111\103\110\105\122\101\100\32\111\112\116\105\111\110\32\39\45\105\118\39","\108\117\97\32\45\105\118")
NoRun("\39\45\101\39\32\110\101\101\100\115\32\97\114\103\117\109\101\110\116","\108\117\97\32\45\101")
NoRun("\115\121\110\116\97\120\32\101\114\114\111\114","\108\117\97\32\45\101\32\97")
NoRun("\39\45\108\39\32\110\101\101\100\115\32\97\114\103\117\109\101\110\116","\108\117\97\32\45\108")
if T then
print("\116\101\115\116\105\110\103\32\39\110\111\116\32\101\110\111\117\103\104\32\109\101\109\111\114\121\39\32\116\111\32\99\114\101\97\116\101\32\97\32\115\116\97\116\101")
NoRun("\110\111\116\32\101\110\111\117\103\104\32\109\101\109\111\114\121","\101\110\118\32\77\69\77\76\73\77\73\84\61\49\48\48\32\108\117\97")
warn("\64\115\116\111\114\101")
warn("\64\49\50\51","\52\53\54","\55\56\57")
assert(_WARN == "\64\49\50\51\52\53\54\55\56\57")
;
_WARN=false
warn("\122\105\112","","\32","\122\97\112")
assert(_WARN == "\122\105\112\32\122\97\112")
;
_WARN=false
warn("\90\73\80","","\32","\90\65\80")
assert(_WARN == "\90\73\80\32\90\65\80")
;
_WARN=false
warn("\64\110\111\114\109\97\108")
end
do
local st,msg = pcall(warn)
assert(string.find(msg,"\115\116\114\105\110\103\32\101\120\112\101\99\116\101\100"))
st,msg=pcall(warn,"\83\72\79\85\76\68\32\78\79\84\32\65\80\80\69\65\82",{})
assert(string.find(msg,"\115\116\114\105\110\103\32\101\120\112\101\99\116\101\100"))
end
print("\43")
print("\116\101\115\116\105\110\103\32\67\116\114\108\32\67")
do
local function kill
(pid)
return os.execute(string.format("\107\105\108\108\32\45\73\78\84\32\37\115\32\50\62\32\47\100\101\118\47\110\117\108\108",pid))
end
local function runback
(luaprg)
local shellprg = string.format("\37\115\32\45\101\32\34\37\115\34\32\38\32\101\99\104\111\32\36\33",progname,luaprg)
local f = io.popen(shellprg,"\114")
local pid = f:read()
print("\40\105\102\32\116\101\115\116\32\102\97\105\108\115\32\110\111\119\44\32\105\116\32\109\97\121\32\108\101\97\118\101\32\97\32\76\117\97\32\115\99\114\105\112\116\32\114\117\110\110\105\110\103\32\105\110\32\98\97\99\107\103\114\111\117\110\100\44\32\112\105\100\32" .. pid .. "\41")
return f,pid
end
local f,pid = runback("\32\32\32\32\112\99\97\108\108\40\102\117\110\99\116\105\111\110\32\40\41\32\112\114\105\110\116\40\49\50\41\59\32\119\104\105\108\101\32\116\114\117\101\32\100\111\32\101\110\100\32\101\110\100\41\59\32\112\114\105\110\116\40\52\50\41")
assert(f:read() == "\49\50")
kill(pid)
assert(f:read() == "\52\50")
assert(f:close())
print("\100\111\110\101")
local f,pid = runback("\32\32\32\32\112\114\105\110\116\40\49\53\41\59\32\115\116\114\105\110\103\46\102\105\110\100\40\115\116\114\105\110\103\46\114\101\112\40\39\97\39\44\32\49\48\48\48\48\48\41\44\32\39\46\42\98\39\41")
assert(f:read() == "\49\53")
assert(os.execute("\115\108\101\101\112\32\49"))
local n = 100
for i = 0, 100
do
if not kill(pid) then
n=i
break
end
end
assert(f:close())
assert(n >= 2)
print(string.format("\100\111\110\101\32\40\119\105\116\104\32\37\100\32\107\105\108\108\115\41",n))
end
print("\79\75")